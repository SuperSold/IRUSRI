{"ast":null,"code":"var _jsxFileName = \"D:\\\\IRUSRI\\\\todo-app\\\\src\\\\components\\\\LoginForm.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  setIsRegistering,\n  onLogin\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validationSchema: Yup.object({\n        email: Yup.string().email('Invalid email address').required('Required'),\n        password: Yup.string().required('Required')\n      }),\n      onSubmit: values => {\n        const storedUser = JSON.parse(localStorage.getItem('registeredUser'));\n        if (storedUser && storedUser.email === values.email && storedUser.password === values.password) {\n          onLogin();\n        } else {\n          alert('Invalid email or password');\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\",\n          className: \"error-message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\",\n          className: \"error-message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"back-button\",\n          onClick: () => setIsRegistering(true),\n          children: \"Go to Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","LoginForm","setIsRegistering","onLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","email","password","validationSchema","object","string","required","onSubmit","values","storedUser","JSON","parse","localStorage","getItem","alert","htmlFor","name","type","component","onClick","_c","$RefreshReg$"],"sources":["D:/IRUSRI/todo-app/src/components/LoginForm.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst LoginForm = ({ setIsRegistering, onLogin }) => {\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Login</h2>\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validationSchema={Yup.object({\r\n          email: Yup.string().email('Invalid email address').required('Required'),\r\n          password: Yup.string().required('Required'),\r\n        })}\r\n        onSubmit={(values) => {\r\n          const storedUser = JSON.parse(localStorage.getItem('registeredUser'));\r\n          if (storedUser && storedUser.email === values.email && storedUser.password === values.password) {\r\n            onLogin();\r\n          } else {\r\n            alert('Invalid email or password');\r\n          }\r\n        }}\r\n      >\r\n        <Form>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <Field name=\"email\" type=\"email\" />\r\n          <ErrorMessage name=\"email\" component=\"div\" className=\"error-message\" />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <Field name=\"password\" type=\"password\" />\r\n          <ErrorMessage name=\"password\" component=\"div\" className=\"error-message\" />\r\n\r\n          <button type=\"submit\">Login</button>\r\n          <button type=\"button\" className=\"back-button\" onClick={() => setIsRegistering(true)}>Go to Register</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}