{"ast":null,"code":"var _jsxFileName = \"D:\\\\IRUSRI\\\\todo-app\\\\src\\\\RegisterForm.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n// Define the validation schema using Yup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().email('Invalid email format').required('Email is required'),\n  password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n});\nfunction RegisterForm({\n  onRegister,\n  onLoginClick\n}) {\n  const handleSubmit = values => {\n    // Save registered user details in localStorage\n    const user = {\n      email: values.email,\n      password: values.password,\n      name: values.name\n    };\n    localStorage.setItem('registeredUser', JSON.stringify(user));\n    alert('Registration successful! Please log in.');\n    onRegister(); // Automatically log in after registration\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: '',\n        email: '',\n        password: ''\n      },\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        handleSubmit\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"div\",\n            style: {\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\",\n            style: {\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\",\n            style: {\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLoginClick,\n      children: \"Back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","validationSchema","object","shape","name","string","required","email","password","min","RegisterForm","onRegister","onLoginClick","handleSubmit","values","user","localStorage","setItem","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","onSubmit","type","component","style","color","onClick","_c","$RefreshReg$"],"sources":["D:/IRUSRI/todo-app/src/RegisterForm.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// Define the validation schema using Yup\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required('Name is required'),\r\n  email: Yup.string().email('Invalid email format').required('Email is required'),\r\n  password: Yup.string()\r\n    .min(6, 'Password must be at least 6 characters')\r\n    .required('Password is required'),\r\n});\r\n\r\nfunction RegisterForm({ onRegister, onLoginClick }) {\r\n  const handleSubmit = (values) => {\r\n    // Save registered user details in localStorage\r\n    const user = { email: values.email, password: values.password, name: values.name };\r\n    localStorage.setItem('registeredUser', JSON.stringify(user));\r\n    alert('Registration successful! Please log in.');\r\n    onRegister(); // Automatically log in after registration\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <Formik\r\n        initialValues={{ name: '', email: '', password: '' }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <div>\r\n              <label>Name:</label>\r\n              <Field type=\"text\" name=\"name\" />\r\n              <ErrorMessage name=\"name\" component=\"div\" style={{ color: 'red' }} />\r\n            </div>\r\n\r\n            <div>\r\n              <label>Email:</label>\r\n              <Field type=\"email\" name=\"email\" />\r\n              <ErrorMessage name=\"email\" component=\"div\" style={{ color: 'red' }} />\r\n            </div>\r\n\r\n            <div>\r\n              <label>Password:</label>\r\n              <Field type=\"password\" name=\"password\" />\r\n              <ErrorMessage name=\"password\" component=\"div\" style={{ color: 'red' }} />\r\n            </div>\r\n\r\n            <button type=\"submit\">Register</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      <button onClick={onLoginClick}>Back to Login</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAGH,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC1CC,IAAI,EAAEN,GAAG,CAACO,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,kBAAkB,CAAC;EAC/CC,KAAK,EAAET,GAAG,CAACO,MAAM,CAAC,CAAC,CAACE,KAAK,CAAC,sBAAsB,CAAC,CAACD,QAAQ,CAAC,mBAAmB,CAAC;EAC/EE,QAAQ,EAAEV,GAAG,CAACO,MAAM,CAAC,CAAC,CACnBI,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDH,QAAQ,CAAC,sBAAsB;AACpC,CAAC,CAAC;AAEF,SAASI,YAAYA,CAAC;EAAEC,UAAU;EAAEC;AAAa,CAAC,EAAE;EAClD,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/B;IACA,MAAMC,IAAI,GAAG;MAAER,KAAK,EAAEO,MAAM,CAACP,KAAK;MAAEC,QAAQ,EAAEM,MAAM,CAACN,QAAQ;MAAEJ,IAAI,EAAEU,MAAM,CAACV;IAAK,CAAC;IAClFY,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IAC5DK,KAAK,CAAC,yCAAyC,CAAC;IAChDT,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,oBACEX,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA,CAACN,MAAM;MACLgC,aAAa,EAAE;QAAEtB,IAAI,EAAE,EAAE;QAAEG,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAE;MACrDP,gBAAgB,EAAEA,gBAAiB;MACnC0B,QAAQ,EAAEd,YAAa;MAAAQ,QAAA,EAEtBA,CAAC;QAAER;MAAa,CAAC,kBAChBb,OAAA,CAACL,IAAI;QAACgC,QAAQ,EAAEd,YAAa;QAAAQ,QAAA,gBAC3BrB,OAAA;UAAAqB,QAAA,gBACErB,OAAA;YAAAqB,QAAA,EAAO;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpBzB,OAAA,CAACJ,KAAK;YAACgC,IAAI,EAAC,MAAM;YAACxB,IAAI,EAAC;UAAM;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjCzB,OAAA,CAACH,YAAY;YAACO,IAAI,EAAC,MAAM;YAACyB,SAAS,EAAC,KAAK;YAACC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAM;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eAENzB,OAAA;UAAAqB,QAAA,gBACErB,OAAA;YAAAqB,QAAA,EAAO;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrBzB,OAAA,CAACJ,KAAK;YAACgC,IAAI,EAAC,OAAO;YAACxB,IAAI,EAAC;UAAO;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnCzB,OAAA,CAACH,YAAY;YAACO,IAAI,EAAC,OAAO;YAACyB,SAAS,EAAC,KAAK;YAACC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAM;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eAENzB,OAAA;UAAAqB,QAAA,gBACErB,OAAA;YAAAqB,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBzB,OAAA,CAACJ,KAAK;YAACgC,IAAI,EAAC,UAAU;YAACxB,IAAI,EAAC;UAAU;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzCzB,OAAA,CAACH,YAAY;YAACO,IAAI,EAAC,UAAU;YAACyB,SAAS,EAAC,KAAK;YAACC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAM;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE,CAAC,eAENzB,OAAA;UAAQ4B,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAETzB,OAAA;MAAQgC,OAAO,EAAEpB,YAAa;MAAAS,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACQ,EAAA,GA7CQvB,YAAY;AA+CrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}